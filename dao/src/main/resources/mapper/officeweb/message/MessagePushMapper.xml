<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.toutiao.web.dao.mapper.message.MessagePushMapper">
    <resultMap id="BaseResultMap" type="com.toutiao.web.dao.entity.message.MessagePush">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="message_theme" property="messageTheme" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="SMALLINT"/>
        <result column="message_type" property="messageType" jdbcType="INTEGER"/>
        <result column="push_type" property="pushType" jdbcType="INTEGER"/>
        <result column="content_type" property="contentType" jdbcType="INTEGER"/>
        <result column="house_data" property="houseData" jdbcType="VARCHAR"/>
        <result column="is_push" property="isPush" jdbcType="SMALLINT"/>
        <result column="city_id" property="cityId" jdbcType="INTEGER"/>
        <result column="newcode" property="newcode" jdbcType="INTEGER"/>
        <result column="house_id" property="houseId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, create_time, message_theme, is_del, message_type, push_type, content_type,
        house_data, is_push, city_id, newcode, house_id
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.toutiao.web.dao.entity.message.MessagePushExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from message_push
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from message_push
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message_push
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.toutiao.web.dao.entity.message.MessagePushExample">
        delete from message_push
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.toutiao.web.dao.entity.message.MessagePush">
    insert into message_push (id, user_id, create_time,
        message_theme, is_del, message_type,
        push_type, content_type, house_data,
        is_push, city_id, newcode, house_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{message_theme,jdbcType=VARCHAR}, #{isDel,jdbcType=SMALLINT}, #{messageType,jdbcType=INTEGER},
        #{pushType,jdbcType=INTEGER}, #{contentType,jdbcType=INTEGER}, #{houseData,jdbcType=VARCHAR},
        #{isPush,jdbcType=SMALLINT}, #{cityId,jdbcType=INTEGER}, #{newcode,jdbcType=INTEGER},
        #{houseId,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.toutiao.web.dao.entity.message.MessagePush">
        insert into message_push
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="message_theme != null">
                message_theme,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="messageType != null">
                message_type,
            </if>
            <if test="pushType != null">
                push_type,
            </if>
            <if test="contentType != null">
                content_type,
            </if>
            <if test="houseData != null">
                house_data,
            </if>
            <if test="isPush != null">
                is_push,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="newcode != null">
                newcode,
            </if>
            <if test="houseId != null">
                house_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="message_theme != null">
                #{message_theme,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=SMALLINT},
            </if>
            <if test="messageType != null">
                #{messageType,jdbcType=INTEGER},
            </if>
            <if test="pushType != null">
                #{pushType,jdbcType=INTEGER},
            </if>
            <if test="contentType != null">
                #{contentType,jdbcType=INTEGER},
            </if>
            <if test="houseData != null">
                #{houseData,jdbcType=VARCHAR},
            </if>
            <if test="isPush != null">
                #{isPush,jdbcType=SMALLINT},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=INTEGER},
            </if>
            <if test="newcode != null">
                #{newcode,jdbcType=INTEGER},
            </if>
            <if test="houseId != null">
                #{houseId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.toutiao.web.dao.entity.message.MessagePushExample"
            resultType="java.lang.Integer">
        select count(*) from message_push
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update message_push
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.message_theme != null">
                message_theme = #{record.message_theme,jdbcType=VARCHAR},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=SMALLINT},
            </if>
            <if test="record.messageType != null">
                message_type = #{record.messageType,jdbcType=INTEGER},
            </if>
            <if test="record.pushType != null">
                push_type = #{record.pushType,jdbcType=INTEGER},
            </if>
            <if test="record.contentType != null">
                content_type = #{record.contentType,jdbcType=INTEGER},
            </if>
            <if test="record.houseData != null">
                house_data = #{record.houseData,jdbcType=VARCHAR},
            </if>
            <if test="record.isPush != null">
                is_push = #{record.isPush,jdbcType=SMALLINT},
            </if>
            <if test="record.cityId != null">
                city_id = #{record.cityId,jdbcType=INTEGER},
            </if>
            <if test="record.newcode != null">
                newcode = #{record.newcode,jdbcType=INTEGER},
            </if>
            <if test="record.houseId != null">
                house_id = #{record.houseId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update message_push
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        message_theme = #{record.message_theme,jdbcType=VARCHAR},
        is_del = #{record.isDel,jdbcType=SMALLINT},
        message_type = #{record.messageType,jdbcType=INTEGER},
        push_type = #{record.pushType,jdbcType=INTEGER},
        content_type = #{record.contentType,jdbcType=INTEGER},
        house_data = #{record.houseData,jdbcType=VARCHAR},
        is_push = #{record.isPush,jdbcType=SMALLINT},
        city_id = #{record.cityId,jdbcType=INTEGER},
        newcode = #{record.newcode,jdbcType=INTEGER},
        house_id = #{record.houseId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.toutiao.web.dao.entity.message.MessagePush">
        update message_push
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="message_theme != null">
                message_theme = #{message_theme,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=SMALLINT},
            </if>
            <if test="messageType != null">
                message_type = #{messageType,jdbcType=INTEGER},
            </if>
            <if test="pushType != null">
                push_type = #{pushType,jdbcType=INTEGER},
            </if>
            <if test="contentType != null">
                content_type = #{contentType,jdbcType=INTEGER},
            </if>
            <if test="houseData != null">
                house_data = #{houseData,jdbcType=VARCHAR},
            </if>
            <if test="isPush != null">
                is_push = #{record.isPush,jdbcType=SMALLINT},
            </if>
            <if test="cityId != null">
                city_id = #{record.cityId,jdbcType=INTEGER},
            </if>
            <if test="newcode != null">
                newcode = #{record.newcode,jdbcType=INTEGER},
            </if>
            <if test="houseId != null">
                house_id = #{record.houseId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.toutiao.web.dao.entity.message.MessagePush">
    update message_push
    set user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
        message_theme = #{message_theme,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=SMALLINT},
      message_type = #{messageType,jdbcType=INTEGER},
      push_type = #{pushType,jdbcType=INTEGER},
      content_type = #{contentType,jdbcType=INTEGER},
        house_data = #{houseData,jdbcType=VARCHAR},
        is_push = #{record.isPush,jdbcType=SMALLINT},
        city_id = #{record.cityId,jdbcType=INTEGER},
        newcode = #{record.newcode,jdbcType=INTEGER},
        house_id = #{record.houseId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>